
##################################################################################################################################
##############-----------------------------Normal Installation(Recommended)------------------------------------###################

NOte: For running Sonarqube there should be atleast: sudo sysctl -w vm.max_map_count=262144 (Make sure to set this value)

# 1. Download and Install SonarQube
# Install the zip utility, which is needed to unzip the SonarQube files.
sudo apt update && sudo apt install unzip wget software-properties-common openjdk-17-jre default-jre -y

# Locate the latest download URL from the SonarQube official download page. (Ref: https://binaries.sonarsource.com/Distribution/sonarqube/)
# Download the SonarQube distribution files.

sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.4.0.87286.zip

# Unzip the downloaded file.
sudo unzip sonarqube-10.4.0.87286.zip
cd /home/vagrant/sonarqube-10.4.0.87286/bin/linux-x86-64
./sonar.sh start


##################################################################################################################################
##############-----------------------------Manual Configuration(With postgresql)------------------------------------##############

# 1. Install OpenJDK 11
# SSH to your Ubuntu server as a non-root user with sudo access.
# Install OpenJDK 11.

sudo apt update && sudo apt install default-jre -y
# ------------------------------------------------------------------------------------------

# 2. Install and Configure PostgreSQL --> Ref: https://www.postgresql.org/download/linux/ubuntu/

# Create the file repository configuration:
sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

# Import the repository signing key:
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

# Update the package lists:
sudo apt-get update

# Install the latest version of PostgreSQL.
# If you want a specific version, use 'postgresql-12' or similar instead of 'postgresql':

# Install PostgreSQL.
sudo apt install postgresql postgresql-contrib -y

# Enable the database server to start automatically on reboot.

sudo systemctl enable postgresql

# Start the database server.

sudo systemctl start postgresql
sudo systemctl status postgresql

# Change the default PostgreSQL password.(-p soanr)

sudo -u postgres psql

# Set a password for the sonar user. Use a strong password in place of my_strong_password.
# Create a sonarqube database and set the owner to sonar.
# Grant all the privileges on the sonarqube database to the sonar user.
# ALTER USER sonar WITH ENCRYPTED password 'sonar';

CREATE USER sonar WITH PASSWORD 'sonar'; 
CREATE DATABASE sonarqube OWNER sonar;
GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonar;

# Exit PostgreSQL
# Return to your non-root sudo user account.
# $ exit

# --------------------------------------------------------------------------------------------

# 4. Add SonarQube User
# Create a dedicated user for SonarQube
# Create a sonar user.

# Create a sonar user and set /opt/sonarqube as the home directory.

sudo useradd -b /opt/sonarqube -s /bin/bash sonarqube

# 3. Download and Install SonarQube
# Install the zip utility, which is needed to unzip the SonarQube files.
sudo apt update && sudo apt install unzip wget software-properties-common -y

# Locate the latest download URL from the SonarQube official download page. (Ref: https://binaries.sonarsource.com/Distribution/sonarqube/)
# Download the SonarQube distribution files.

sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.4.0.87286.zip

# Unzip the downloaded file.
sudo unzip sonarqube-10.4.0.87286.zip

# Move the unzipped files to /opt/sonarqube directory

mv sonarqube-10.4.0.87286 /opt/sonarqube
sudo chown -R sonarqube:sonarqube /opt/sonarqube

-----------------------------------------------------------------------------------------


5. Configure SonarQube
 Edit the SonarQube configuration file.

$ sudo nano /opt/sonarqube/conf/sonar.properties
Find the following lines:

#sonar.jdbc.username=sonar
#sonar.jdbc.password=sonar
#sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube
#sonar.web.host=127.0.0.1
#sonar.web.port=9000
#sonar.web.javaAdditionalOpts=-server
#sonar.log.level=INFO
#sonar.path.logs=logs

Uncomment the lines, and add the database user and password you created in Step 2.
Save and exit the file.
-----------------------------------------------------------------------------------------

# 6. Setup Systemd service
# Create a systemd service file to start SonarQube at system boot.

sudo nano /etc/systemd/system/sonarqube.service
# Paste the following lines to the file.

# [Unit]
# Description=SonarQube service
# After=syslog.target network.target
# 
# [Service]
# Type=forking
# ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
# ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
# User=sonarqube
# Group=sonarqube
# Restart=always
# LimitNOFILE=65536
# LimitNPROC=4096
# 
# [Install]
# WantedBy=multi-user.target

# Save and exit the file.

Enable the SonarQube service to run at system startup.

# -----------------------------------------------------------------------------------------

# 7. Modify Kernel System Limits
# SonarQube uses Elasticsearch to store its indices in an MMap FS directory. It requires some changes to the system defaults.

# Edit the sysctl configuration file.
# $ sudo nano /etc/sysctl.conf
# Add the following lines.

# vm.max_map_count=262144
# fs.file-max=65536
# ulimit -n 65536
# ulimit -u 4096

# Save and exit the file.
# Reboot the system to apply the changes.
# sudo reboot
# -----------------------------------------------------------------------------------------

# 8. Access SonarQube Web Interface
# Access SonarQube in a web browser at your server's IP address on port 9000.

##################################################################################################################################
##############-----------------------------Sonar Integration with Git and Jenkins------------------------------------#############

# Create a project -> General Settings ->  With Jenkins
# Copy the software.properties token
# Administrator -> Create a token -> Global(all projects scan) -> Copy the token
# Install plugins in jenkins (ssh2, sonarqube scannner)
# Manage jenkins -> Tools -> Add Sonarqube scanner -> save
# Manage Jenkins -> System -> Add Sonarqube servers 

##################################################################################################################################
##############-----------------------------Install Sonar-scanner using docker-compose------------------------------#############

curl -L -o sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
unzip sonar-scanner-cli-5.0.1.3006-linux.zip

mv sonar-scanner-cli-5.0.1.3006-linux/ /opt/sonar-scanner

# To make a permanent changes in jekins-machine 
# open /etc/profile.d
# create a sonar-scanner.sh and run below commands
 
echo '#!/bin/bash' > sonar-scanner.sh
echo '' >> sonar-scanner.sh
echo '# Add the SonarQube Scanner bin directory to the PATH' >> sonar-scanner.sh
echo 'export PATH="$PATH:/opt/sonar-scanner/bin"' >> sonar-scanner.sh




Save the Vagrant box: 

vagrant package docker-scan --output docker-scan.box
vagrant cloud publish kqmail56/docker-scan 1.0.0 libvirt dcoker-scan.box --release
